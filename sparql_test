#SPARQL for 

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.semanticweb.org/edison/ontologies/2019/10/OMdB_Semantic#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?mTitle ?imdbID ?plot  (GROUP_CONCAT(DISTINCT ?name) AS ?casts)
WHERE {?m a owl:Media.
?m owl:Title ?mTitle.
?m owl:Plot ?plot.
?m owl:imdbID ?imdbID.
{OPTIONAL{{	?m owl:hasActor ?a.
	?a owl:name ?name.}
UNION{	?a owl:isActorOf ?m.
        ?a owl:name ?name}}}
UNION
{OPTIONAL{{	?m owl:hasDirector? ?d.
	?d owl:name ?name.}
UNION{	?d owl:isDirectorOf ?m.
        ?d owl:name ?name}}}
UNION
{OPTIONAL{{	?m owl:hasVA ?va.
	?va owl:name ?name.}
UNION{	?va owl:isVAOf ?m.
      ?va owl:name ?name}}}
UNION
{OPTIONAL{{	?m owl:hasCreator ?c.
	?c owl:name ?name.}
UNION{	?c owl:isCreatorOf ?m.
        ?c owl:name ?name}}}
UNION  
{OPTIONAL{{	?m owl:hasWriter ?w.
	?w owl:name ?name.}
UNION{	?w owl:isWriterOf ?m.
        ?w owl:name ?name}}}
FILTER(regex(str(?mTitle), "Star Wars"))}
GROUP BY ?mTitle ?imdbID ?plot ?name
////////////////////////////////////////////////////////
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.semanticweb.org/edison/ontologies/2019/10/OMdB_Semantic#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?name ?imdbID 
							(GROUP_CONCAT(DISTINCT str(?mTitle)) AS ?medias)
							WHERE {?p a owl:Person.?p owl:name ?name.
?p owl:imdbID ?imdbID.

							OPTIONAL{{?p owl:isActorOf ?a.?a owl:Title ?mTitle.}
UNION
							{?a owl:hasActor ?p.?p owl:name ?name}}

							OPTIONAL{{?p owl:isDirectorOf ?d.?d owl:Title ?mTitle.}
  UNION
							{?d owl:hasDirector ?p.?p owl:name ?name}}

							OPTIONAL{{?p owl:isVAOf ?va.?va owl:Title ?mTitle.}UNION
							{?va owl:hasVA ?p.?p owl:name ?name}}

							OPTIONAL{{?p owl:isCreatorOf ?c.?c owl:Title ?mTitle.}UNION
							{?c owl:hasCreator ?p.?p owl:name ?name}}

							OPTIONAL{{?p owl:isWriterOf ?w.?w owl:Title ?mTitle.}UNION
							{?w owl:hasWriter ?p.?p owl:name ?name}}
FILTER(regex(str(?name), "George Lucas"))} 
GROUP BY ?name ?imdbID ?mTitle
////////////////////////////////////////////////////////
Actor list with their corresponding movies

SELECT ?aName ?id ?mTitle 
WHERE {
?a a owl:Actor.
 ?a owl:name ?aName.
 ?a owl:imdbID ?id

{?a owl:isActorOf ?media.
 ?a owl:Title ?mTitle.}
UNION
{?mTitle owl:hasActor ?a}

}ORDER BY ASC(?mTitle)

////////////////////////////////////////////////////////
Media Details

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.semanticweb.org/edison/ontologies/2019/10/OMdB_Semantic#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?mTitle ?actorName ?actorID ?directorName ?directorID ?creatorName ?creatorID ?writerName ?writerID ?vaName ?vaID ?pName ?pID ?awards
WHERE { 
?m a owl:Media.
 ?m owl:Title ?mTitle FILTER regex(STR(?mTitle), "").
 ?m owl:Awards ?awards.

OPTIONAL{
{?a a owl:Actor.
 ?a owl:isActorOf ?m.
 ?a owl:name ?actorName.
 ?a owl:imdbID ?actorID}
UNION
{?mTitle owl:hasActor ?a}}

OPTIONAL{
{?d a owl:Director.
 ?d owl:isDirectorOf ?m.
 ?d owl:name ?directorName.
 ?d owl:imdbID ?directorID}
UNION
{?mTitle owl:hasDirector ?d}}

OPTIONAL{
{?c a owl:Creator.
 ?c owl:isCreatorOf ?m.
 ?c owl:name ?creatorName.
 ?c owl:imdbID ?creatorID}
UNION
{?mTitle owl:hasCreator ?c}}

OPTIONAL{
{?w a owl:Writer.
 ?w owl:isWriterOf ?m.
 ?w owl:name ?writerName.
 ?w owl:imdbID ?writerID}
UNION
{?mTitle owl:hasWriter ?w}}

OPTIONAL{
{?va owl:isVAOf ?m.
 ?va owl:name ?vaName.
 ?va owl:imdbID ?vaID}
UNION
{?mTitle owl:hasVA ?va}}

OPTIONAL{
{?p owl:hasProduced ?m.
 ?p owl:name ?pName.
 ?p owl:imdbID ?pID}
UNION
{?mTitle owl:hasProduced ?p}}
}

